[uwsgi]
# http socket http-socket
# http: uwsgi将在指定的地址和端口上监听 HTTP请求，并直接处理这些请求。
# socket: uwsgi将在指定的地址和端口或文件路径上监听连接。通常用于与前端Web服务器（如Nginx）配合使用。
# http-socket: gi将在指定的地址和端口上监听HTTP请求，并直接处理这些请求。与http选项的主要区别在于http-socket更加灵活，可以用于更复杂的配置。
http-socket = 0.0.0.0:5000
# 指定uwsgi启动时的工作目录。
chdir = /server
# 指定WSGI入口文件
wsgi-file = /server/manage.py
# 指定WSGI应用程序入口
callable = app
# 进程数
processes = 2
# 启用主进程，uwsgi将启动一个主进程来管理和监控子进程，提高稳定性和性能。
master = true
# 指定每个子进程使用的线程数
threads = 2
# 指定日志文件的路径。
logto = /workdir/logs/uwsgi.log
# 日志文件切割大小，约为5M时切分。
log-maxsize = 5000000
# 指定pid文件路径，方便管理和监控。
pidfile = /workdir/uwsgi.pid
# 设置uwsgi内存缓冲区大小，以字节为单位。
buffer-size = 32768
# 启用自动清理内存，以释放内存。
vacuum = true
# 将uwsgi作为守护进程运行，并将日志输出到指定的日志文件
# daemonize = /workdir/logs/uwsgi.log
# 指定Python命令行参数
pyargv = --work_dir /workdir --mongo_host 127.0.0.1 --mongo_port 27017 --mongo_db_name pywps --mongo_username= --mongo_password= --redis_host 127.0.0.1 --redis_port 6379 --redis_db 0 --redis_password= --consul_ip 127.0.0.1 --consul_port 8500 --service_name py-wps --service_ip= --service_port 5000 --file_server_url= --deploy_mode single
